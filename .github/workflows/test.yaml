name: Testing

on:
  workflow_call:
  pull_request:
  push:
    branches: [ "main" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.1
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: testing
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: password
        ports:
        - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Cleanup
        uses: rtCamp/action-cleanup@master

      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set branch-based environment variables
        uses: iamtheyammer/branch-env-vars@v1.1.3
        with:
          ENV_APP_ENV: testing
          ENV_APP_DEBUG: true
          ENV_DB_DATABASE: testing
          ENV_DB_USERNAME: root
          ENV_DB_PASSWORD: password
          ENV_CACHE_DRIVER: array
          ENV_MAIL_MAILER: array
          ENV_SESSION_DRIVER: array
          ENV_TELESCOPE_ENABLED: false
          ENV_SENTRY_LARAVEL_DSN: 'null'
      - name: Create dotenv
        uses: iamsauravsharma/create-dotenv@v1.2.1
        with:
          env-prefix: 'ENV_' # Optional (default: '')
          file-name: 'github.env' # Optional (default : '.env')

      - uses: addnab/docker-run-action@v3
        with:
          options: -v ${{ github.workspace }}:/app --env-file github.env
          image: fontebasso/dumpenv:1.0.0
          shell: /bin/sh
          run: dump-env --template=.env.ci --prefix='' > /app/.env

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: |
          composer install --no-ansi --no-interaction --no-scripts
      - name: Prepare Laravel Application
        run: |
          php artisan key:generate
      - name: Run Testsuite
        run: php artisan test
